---
# Fail2Ban
- name: Install fail2ban.
  package: name=fail2ban state=present enablerepo=epel
  
- name: Ensure fail2ban is running and enabled on boot.
  service: name=fail2ban state=started enabled=yes
  when: security_fail2ban_enabled

# SSH
- name: Update SSH configuration to be more secure.
  lineinfile:
    dest: "{{ security_ssh_config_path }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - regexp: "^PasswordAuthentication"
      line: "PasswordAuthentication {{ security_ssh_password_authentication }}"
    - regexp: "^#PermitRootLogin"
      line: "PermitRootLogin {{ security_ssh_permit_root_login }}"
    - regexp: "^#PubkeyAuthentication"
      line: "PubkeyAuthentication {{ security_ssh_pubkey }}"
    - regexp: "^#Port"
      line: "Port {{ security_ssh_port }}"
    - regexp: "^#PermitEmptyPasswords"
      line: "PermitEmptyPasswords {{ security_ssh_permit_empty_password }}"
    - regexp: "^ChallengeResponseAuthentication"
      line: "ChallengeResponseAuthentication {{ security_ssh_challenge_response_auth }}"
    - regexp: "^GSSAPIAuthentication"
      line: "GSSAPIAuthentication {{ security_ssh_gss_api_authentication }}"
    - regexp: "^X11Forwarding"
      line: "X11Forwarding {{ security_ssh_x11_forwarding }}"
  notify: restart ssh

- name: Add configured user accounts to passwordless sudoers.
  lineinfile:
    dest: /etc/sudoers
    regexp: '^{{ item }}'
    line: '{{ item }} ALL=(ALL) NOPASSWD: ALL'
    state: present
    validate: 'visudo -cf %s'
  with_items: "{{ security_sudoers_passwordless }}"
  when: security_sudoers_passwordless | length > 0

- name: Add configured user accounts to passworded sudoers.
  lineinfile:
    dest: /etc/sudoers
    regexp: '^{{ item }}'
    line: '{{ item }} ALL=(ALL) ALL'
    state: present
    validate: 'visudo -cf %s'
  with_items: "{{ security_sudoers_passworded }}"
  when: security_sudoers_passworded | length > 0

# Autoupdate
- name: Install yum-cron.
  package: name=yum-cron state=present

- name: Ensure yum-cron is running and enabled on boot.
  service: name=yum-cron state=started enabled=yes

- name: Configure autoupdates (RHEL 7).
  lineinfile:
    dest: "/etc/yum/yum-cron.conf"
    regexp: '^apply_updates = .+'
    line: 'apply_updates = yes'
  when: security_autoupdate_enabled and ansible_distribution_major_version | int == 7
